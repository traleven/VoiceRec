.TH "opus_custom.h" 3 "Sat Apr 6 2019" "Version 1.3-19-g3765a24" "Opus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
opus_custom.h \- Opus-Custom reference implementation API\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'opus_defines\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBOPUS_CUSTOM_EXPORT\fP"
.br
.ti -1c
.RI "#define \fBOPUS_CUSTOM_EXPORT_STATIC\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBOpusCustomEncoder\fP \fBOpusCustomEncoder\fP"
.br
.RI "Contains the state of an encoder\&. "
.ti -1c
.RI "typedef struct \fBOpusCustomDecoder\fP \fBOpusCustomDecoder\fP"
.br
.RI "State of the decoder\&. "
.ti -1c
.RI "typedef struct \fBOpusCustomMode\fP \fBOpusCustomMode\fP"
.br
.RI "The mode contains all the information necessary to create an encoder\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBOpusCustomMode\fP * \fBopus_custom_mode_create\fP (\fBopus_int32\fP Fs, int frame_size, int *error)"
.br
.RI "Creates a new mode struct\&. "
.ti -1c
.RI "void \fBopus_custom_mode_destroy\fP (\fBOpusCustomMode\fP *mode)"
.br
.RI "Destroys a mode struct\&. "
.ti -1c
.RI "int \fBopus_custom_encoder_get_size\fP (const \fBOpusCustomMode\fP *mode, int channels)"
.br
.RI "Gets the size of an OpusCustomEncoder structure\&. "
.ti -1c
.RI "\fBOpusCustomEncoder\fP * \fBopus_custom_encoder_create\fP (const \fBOpusCustomMode\fP *mode, int channels, int *error)"
.br
.RI "Creates a new encoder state\&. "
.ti -1c
.RI "void \fBopus_custom_encoder_destroy\fP (\fBOpusCustomEncoder\fP *st)"
.br
.RI "Destroys a an encoder state\&. "
.ti -1c
.RI "int \fBopus_custom_encode_float\fP (\fBOpusCustomEncoder\fP *st, const float *pcm, int frame_size, unsigned char *compressed, int maxCompressedBytes)"
.br
.RI "Encodes a frame of audio\&. "
.ti -1c
.RI "int \fBopus_custom_encode\fP (\fBOpusCustomEncoder\fP *st, const \fBopus_int16\fP *pcm, int frame_size, unsigned char *compressed, int maxCompressedBytes)"
.br
.RI "Encodes a frame of audio\&. "
.ti -1c
.RI "int \fBopus_custom_encoder_ctl\fP (\fBOpusCustomEncoder\fP *OPUS_RESTRICT st, int request,\&.\&.\&.)"
.br
.RI "Perform a CTL function on an Opus custom encoder\&. "
.ti -1c
.RI "int \fBopus_custom_decoder_get_size\fP (const \fBOpusCustomMode\fP *mode, int channels)"
.br
.RI "Gets the size of an OpusCustomDecoder structure\&. "
.ti -1c
.RI "int \fBopus_custom_decoder_init\fP (\fBOpusCustomDecoder\fP *st, const \fBOpusCustomMode\fP *mode, int channels)"
.br
.RI "Initializes a previously allocated decoder state The memory pointed to by st must be the size returned by opus_custom_decoder_get_size\&. "
.ti -1c
.RI "\fBOpusCustomDecoder\fP * \fBopus_custom_decoder_create\fP (const \fBOpusCustomMode\fP *mode, int channels, int *error)"
.br
.RI "Creates a new decoder state\&. "
.ti -1c
.RI "void \fBopus_custom_decoder_destroy\fP (\fBOpusCustomDecoder\fP *st)"
.br
.RI "Destroys a an decoder state\&. "
.ti -1c
.RI "int \fBopus_custom_decode_float\fP (\fBOpusCustomDecoder\fP *st, const unsigned char *data, int len, float *pcm, int frame_size)"
.br
.RI "Decode an opus custom frame with floating point output\&. "
.ti -1c
.RI "int \fBopus_custom_decode\fP (\fBOpusCustomDecoder\fP *st, const unsigned char *data, int len, \fBopus_int16\fP *pcm, int frame_size)"
.br
.RI "Decode an opus custom frame\&. "
.ti -1c
.RI "int \fBopus_custom_decoder_ctl\fP (\fBOpusCustomDecoder\fP *OPUS_RESTRICT st, int request,\&.\&.\&.)"
.br
.RI "Perform a CTL function on an Opus custom decoder\&. "
.in -1c
.SH "Detailed Description"
.PP 
Opus-Custom reference implementation API\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define OPUS_CUSTOM_EXPORT"

.SS "#define OPUS_CUSTOM_EXPORT_STATIC"

.SH "Author"
.PP 
Generated automatically by Doxygen for Opus from the source code\&.
